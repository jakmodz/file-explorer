import { CheckBox,VerticalBox,LineEdit,ListView, Button, ComboBox, StandardListView} from "std-widgets.slint";

export component AppWindow inherits Window 
{
    
     // Funkcja ustawiajÄ…ca model danych dla StandardListView
     public function setModel(x:[StandardListViewItem])
    {
       
        list_data = x;
        
    }
    public function checkIsBothTrue(x:bool,z:bool) -> bool
    {
            if (x== true && z ==true)
            {
                root.both();
                true;
            }
            else 
            {
                false
            }
    }
    public function checkIsBothFalse(x:bool,z:bool) -> bool
    {
            if (x== false && z ==false)
            {
                root.both();
                true;
            }
            else 
            {
                false
            }
    }
    public function reverse(x: bool) -> bool {
        return !x;
    }
     callback getFiles() ->[StandardListViewItem];
     callback onlyFiles()->[StandardListViewItem];
     callback onlyCatalogs()->[StandardListViewItem];
     callback both()->[StandardListViewItem];
     callback moveForward(StandardListViewItem)->[StandardListViewItem];
     callback moveBack()->[StandardListViewItem];
     callback openFile(StandardListViewItem);
     property <[StandardListViewItem]> list_data;
     property <bool> box1:false;
     property <bool> box2:false;
     max-width: 950px;
     min-width: 830px;
     preferred-height: 400px;
   
     popup := PopupWindow {
        Rectangle { height:100%; width: 100%; background: yellow; }
        x: 20px; y: 20px; height: 50px; width: 50px;
    }
    VerticalLayout
    {
        
        HorizontalLayout 
        {
            Button 
             {
               clicked => 
               {
                
                setModel( root.moveBack());
                
               }
              
             }
            Button 
             {
                clicked => 
                {
                   if(listView.current-item > -1)
                   {
                    setModel(root.moveForward(list_data[listView.current-item]));
                   }

                }
             }
             
        }
        HorizontalLayout
        {
            padding: 10px;
            alignment: end;
            
            HorizontalLayout 
            {
                alignment: start;
                VerticalLayout 
                {         
                        alignment: start;
                        LineEdit 
                        {
                            placeholder-text: "search in current";
                        }
                        HorizontalLayout 
                        {
                            alignment: center;
                            VerticalLayout 
                            {
                                padding-left: 10px;
                                CheckBox 
                                {
                                    text: "file";
                                  
                                    toggled => 
                                    {
                                       
                                       box1 =  reverse(box1);
                                        if (checkIsBothTrue(box1,box2))
                                        {
                                            setModel( root.both() )
                                        }
                                        else if(box1 == true)
                                        {
                                            setModel(  root.onlyFiles());
                                        }
                                        else if (box1 == false && box2 == false)
                                        {
                                            setModel(root.getFiles())
                                        }
                                        else {
                                            setModel(  root.onlyCatalogs());
                                        }
                                        
                                    }
                                }
                                CheckBox 
                                {
                                    text: "folder";
                                    
                                    toggled => 
                                    {
                                       box2 = reverse(box2);
                                       if (checkIsBothTrue(box1,box2))
                                       {
                                        setModel(root.getFiles())
                                       }
                                       else if (box2 ==true )
                                        {
                                            setModel( root.onlyCatalogs() )
                                        }
                                        else if (box1 == false && box2 == false)
                                        {
                                            setModel(root.getFiles())
                                        }
                                        else 
                                        {
                                            setModel( root.onlyFiles());
                                        }

                                    }
                                }
                                LineEdit 
                                {
                                   width: 10%;
                                   placeholder-text: "extension";
                                   enabled: box1;
                                }
                                Button 
                                {
                                    text: "open file";
                                    clicked => 
                                    {
                                            root.openFile(list_data[listView.current-item])
                                    }
                                }
                            }
                           
                        }
                        
                }
            }
           
        }
      
    }
    HorizontalLayout 
    {
        alignment: start;
        VerticalLayout 
        {
           
            width: 80%;
            alignment: end;
            listView:=   StandardListView 
            {
                height: 91%;
                model: list_data;
                
            }
        }
        
   
    }
} 